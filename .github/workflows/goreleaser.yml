name: Release new version

on:
  push:
    tags:
      - "*" # triggers only if push new tag version, like `v0.8.4`

# Restrict jobs in this workflow to have no permissions by default; permissions
# should be granted per job as needed using a dedicated `permissions` block
permissions: {}

jobs:
  tests:
    permissions:
      contents: read # to fetch code (actions/checkout)
    name: Run unit tests
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: .go-version
          check-latest: true
      - name: Run test action
        uses: ./.github/workflows/test-action
  goreleaser:
    needs:
      - tests
    outputs:
      hashes: ${{ steps.hash.outputs.hashes }}
    permissions:
      contents: write # for goreleaser/goreleaser-action to create a GitHub release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          ref: ${{ inputs.commit }}
      - name: Set up Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: .go-version
          check-latest: true
      - name: Run GoReleaser
        id: run-goreleaser
        env:
          GORELEASER_CROSS_VERSION: v1.24-v2.7.0
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker run --rm -e CGO_ENABLED=1 -e GITHUB_TOKEN=${{secrets.GITHUB_TOKEN}} \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`:/go/src/datadog-sbom-generator \
            -w /go/src/datadog-sbom-generator \
            ghcr.io/goreleaser/goreleaser-cross:$GORELEASER_CROSS_VERSION --clean
      - name: Generate subject
        id: hash
        env:
          ARTIFACTS: "${{ steps.run-goreleaser.outputs.artifacts }}"
        run: |
          set -euo pipefail
          checksum_file=$(cat dist/artifacts.json | jq -r '.[] | select (.type=="Checksum") | .path')
          echo "hashes=$(cat $checksum_file | base64 -w0)" >> "$GITHUB_OUTPUT"
  provenance:
    needs: [goreleaser]
    permissions:
      actions: read # To read the workflow path.
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    # See https://github.com/DataDog/datadog-sbom-generator/actions/runs/14980148145/job/42082507191#step:2:215
    # where the workflow fails with when uses a pinned SHA and says "Expected ref of the form refs/tags/vX.Y.Z"
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_generic_slsa3.yml@v2.1.0
    with:
      base64-subjects: "${{ needs.goreleaser.outputs.hashes }}"
      upload-assets: true # upload to a new release
      draft-release: true # upload to a new draft release
